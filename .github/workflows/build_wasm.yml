name: build_wasm

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build_wasm:

    strategy:
      fail-fast: false

    runs-on: ubuntu-latest

    env:
      config: Release

    steps:
    - name: Sync Repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Docker login
      uses: docker/login-action@v1 
      with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Docker Run Emscripten
      run: docker run -dit --name emscripten -v $(pwd):/src trzeci/emscripten:1.39.7-upstream bash
  
    - name: Create Build Directory
      run: mkdir build
      
    - name: CMake Build
      run:  docker exec -it emscripten sh -c "cmake .. -DMATERIALX_BUILD_JS=ON -DMATERIALX_BUILD_RENDER=OFF -DMATERIALX_BUILD_TESTS=OFF -DMATERIALX_BUILD_GEN_GLSL=OFF -DMATERIALX_BUILD_GEN_OSL=OFF -DMATERIALX_BUILD_GEN_OGSXML=OFF -DMATERIALX_BUILD_GEN_OGSFX=OFF -DMATERIALX_BUILD_GEN_ARNOLD=OFF -DMATERIALX_BUILD_CROSS=OFF -DMATERIALX_BUILD_RUNTIME=OFF -DMATERIALX_BUILD_PYTHON=OFF -DMATERIALX_BUILD_DOCS=OFF -DCMAKE_CXX_FLAGS='-std=c++17' -DMATERIALX_EMSDK_PATH=/emsdk_portable/" 
      working-directory: build

  - name: Install Build
     run: cmake --build . --target install
     working-directory: build

  - name: Setup Node.js
    uses: actions/setup-node@v1
    with: 
       node-version: '12'

  - name: Run Test
    run: npm install
    run: npm run test
    working-directory: source/JsMaterialX/test
 